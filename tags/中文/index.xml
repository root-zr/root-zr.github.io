<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>中文 on Albert Wang</title>
    <link>https://root-zr.github.io/tags/%E4%B8%AD%E6%96%87/</link>
    <description>Recent content in 中文 on Albert Wang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 23 Mar 2022 13:39:37 +0800</lastBuildDate><atom:link href="https://root-zr.github.io/tags/%E4%B8%AD%E6%96%87/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Method Convert Latex to Word| 一个将latex公式转换为word公式的小窍门</title>
      <link>https://root-zr.github.io/en/2022/03/23/a-method-convert-latex-to-word-%E4%B8%80%E4%B8%AA%E5%B0%86latex%E5%85%AC%E5%BC%8F%E8%BD%AC%E6%8D%A2%E4%B8%BAword%E5%85%AC%E5%BC%8F%E7%9A%84%E5%B0%8F%E7%AA%8D%E9%97%A8/</link>
      <pubDate>Wed, 23 Mar 2022 13:39:37 +0800</pubDate>
      
      <guid>https://root-zr.github.io/en/2022/03/23/a-method-convert-latex-to-word-%E4%B8%80%E4%B8%AA%E5%B0%86latex%E5%85%AC%E5%BC%8F%E8%BD%AC%E6%8D%A2%E4%B8%BAword%E5%85%AC%E5%BC%8F%E7%9A%84%E5%B0%8F%E7%AA%8D%E9%97%A8/</guid>
      <description>今天在看IEEE网页上的论文的时候发现它的公式竟然可以被复制成多种格式.
欣喜至于便去了解了一下这种技巧。然后发现其实是因为它的网页中引入了MathJax.js脚本。
&amp;lt;script type=&amp;#34;text/javascript&amp;#34; src=&amp;#34;/xploreAssets/MathJax-274/MathJax.js?config=default&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; 同样的道理，我们也可以按照这种方式来编写latex公式，然后通过浏览器解析之后再将它复制成word对应的代码文本。道理很简单，那么具体该怎么做呢？
首先我们就需要一个.html的文件了，因为是要浏览器来解析的。然后将脚本导入进来。可以看到整个页面中基本只引入了MathJax的脚本，不需要别的什么设置。然后把我们需要的公式用latex的方式写在里。
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;script type=&amp;#34;text/javascript&amp;#34; src=&amp;#34;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;#34;&amp;gt; &amp;lt;/script&amp;gt; &amp;lt;title&amp;gt;tex to word&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; \begin{equation*} q_{j}=W\cdot\vec{x}_{j:j+R-1}+\vec{b} \tag{1} \end{equation*} &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; 然后通过浏览器打开，鼠标右键将其保存为MathML code，如下图所示：
然后在word中选择插入公式，将拷贝出来的文本以纯文本的形式粘贴到公式块中就完成了。如果要转换不同的公式只需要在上面的标签中不断添加公式就可以了。
不过还是可以看到一个小缺陷，我们在tex格式里是加了\tag{1}的，而且网页也能显示，但是粘贴到word里就没有了。所以只能用word的方式来插入，选择插入——&amp;gt;文档部件，选择域，如下图：
然后在公式编辑区域里输入#(数字)，按下回车就可以成功编号了。
参考资料：
https://tex.stackexchange.com/questions/25223/embed-latex-math-equations-into-microsoft-word</description>
    </item>
    
    <item>
      <title>My Internship Experience | 我的5个月实习心得</title>
      <link>https://root-zr.github.io/en/2022/03/19/my-internship-experience-%E6%88%91%E7%9A%845%E4%B8%AA%E6%9C%88%E5%AE%9E%E4%B9%A0%E5%BF%83%E5%BE%97/</link>
      <pubDate>Sat, 19 Mar 2022 13:39:37 +0800</pubDate>
      
      <guid>https://root-zr.github.io/en/2022/03/19/my-internship-experience-%E6%88%91%E7%9A%845%E4%B8%AA%E6%9C%88%E5%AE%9E%E4%B9%A0%E5%BF%83%E5%BE%97/</guid>
      <description>2021年8月，我正式开始了我人生的第一次实习旅程。因为校企合作的关系，所以我和实习的公司应该属于被动的关系。不过也是由于这层关系，让我有了一个难忘的实习经历。
我是在大数据部门实习，主要参与的业务包括两个方面。一个是和数据直接相关，通过和数据的直接交互，保证数据的完整，有效。还有就是一些和公司业务相关的一些操作；另一部分是进行软件开发，因为前一部分已经有了可靠的数据，所以要基于这些数据进行软件开发和产品设计。
首先我的两个leader都是特别年轻，而且具有人格魅力的人。leader 1是我所在部门的大老板（后文简称老板），我主要是在做开发的时候在他的组。leader 2 是招我进部门的人（后文简称leader)，还记得当时面试的时候主要都是我在说话，导致我一度认为他不善言辞，后面我才知道我错了，还错的很离谱，而他也正好是我第一个组的leader，这也算是缘分吧。
我最开始就是做数据分析，这部分的时间并不长，只有一个多月，再加上刚进入公司需要申请各种权限，熟悉公司的环境和氛围，所以感觉并没有太多的心得。值得一提的是，我刚进入公司的时候由于新的环境，再加上工作语言不熟悉，导致我非常紧张，不太敢于和同事说话，幸运的是我进入公司的第一位引路人A同事特别好，让我能够慢慢放松，慢慢地融入大家。而且进入公司会有很多的环境要配置，有各种权限要申请，我个人真的是一团乱麻，他也帮了我很多，在同期实习的别的同学还困扰在各种问题中时我已经可以了解业务了。我想以后我在真正开始第一份工作的时候就不会像之前那么紧张了，这也算是一种进步吧。
由于公司实行敏捷开发，所以每天都有站立会议，这时就体现出leader特别强的语言组织能力和讲故事的能力，不管是什么样的任务，他都能将其叙述地特别具有逻辑性。比如，我现在要完成A这样的一个事情，之所以要做A，是因为有怎样怎样的好处，它和我们整个业务的关系是什么，处于什么样的位置。基于这样的一个背景，那我现在就需要做B,C,D等等一系列的工作，现在我们到了哪一步，需要有什么问题需要被解决……会以一种讲故事的方式展开，这是觉得特别具有魅力的一点。另外我觉得他是将公司的企业文化和价值观具象化的人，如果说公司培训那么多企业价值观的内容都是平面的，那他就是立体的。当他在你面前和你交谈的时候，他说的话中体现的逻辑性特别具有魅力。用老板的话说，leader是一个极具演讲天赋的人。
一开始都是要从学习和了解业务为主，可是当我发现我要了解的技术包括Hadoop, spark, Scala等等一系列的大数据组件，还有公司用来自动化流程的一些工具Jira, Jenkins等等，这么多新的内容放在面前，我确实像面对着一个刺猬，无处下爪。怀着带着任务学习的心态，我先从语言着手，然后再去理解语言下的工具，当会使用的时候就能开始做一点小事，当做事遇到问题的时候再去查阅资料就能理解比较底层的原理，当了解之后也觉得这些东西可能没有那么困难。在学校学习的时候，一般都是要从最核心的地方开始，一步步向上封装，这也是一种比较新的感悟。所以我觉得当面对一个新鲜的事物的时候，不要被这件事本身的庞大给吓跨，从离自己最近的那件小事开始学习，一点点去靠近，当翻越过的时候回头再看，可能会发现当时自己以为的山丘其实就是一个小土堆。
很快，一年一度的秋季校园招聘开始了，因为我的家庭条件不算好，自己有生存的压力，所以希望自己可能有一个薪酬相对高一点的工作，为此适当放弃自己的一点健康我感觉也能接受。这点和我实习的公司不是特别一致，所以我也加入了秋招的行列。这时有更多的问题暴露出来了，一个是因为我加入实习的时间是8月，这个时间是公司定的，我个人没法改变，所以到秋招其实也没有太长的时间；同样也因为时间短，所以可能并没有多少实际的，能够拿出手的项目可以和面试官说。我个人感觉数据分析是一个不太能够量化工作量的一个工作，有时候程序运行一遍要几个小时，有时候几个小时过去了可能还得不到想要的一个效果。而且当我思考了一点可以优化的内容，反应在代码上也就是几行，而且这个深思熟虑的结果表述出来的话在别人看来很可能就是显然的一个事情。
为此，我开始去做开发的工作，这样的话自己写了一行代码就有一行代码的效果。一开始确实是这样，感觉自己想做的和正在做的事情一致了，所以开始变得比较有干劲。我的第二位引路人B同事也很nice，他每次给我小的ticket的时候都是会给我官方的文档，然后再告知要达成的目标。这也养成了我阅读官方文档的习惯，我发现相比较于在英语阅读上花费的时间和在中文的真假信息之间做选择，前者甚至花费的时间更小。但是新的问题又随之出现了，因为我感觉自己的时间开始不够用了，虽然给我的任务并不重，但我一方面学的东西不多，再者各种技术也不够熟练，所以上班时间基本都要全力去工作。找工作的事情只能放在晚上，可是算法题有时候一道题就得做一个小时，还有一些面经要背，晚上并没有那么多的空闲时间给我。这时我的做法只能是坚持去做这件事，相信坚持下去能得到好的结果。幸运又再次降临，很快我就顺利地得到了让我满意的offer。或许这也是我的另一个经验，当你身处于多件事情交错的一个环境之下，此时只能在其中勉强维持，但是看不到出路的时候，不妨坚持一下，再坚持一下，幸福就在拐角处。
工作的问题目前已经不是困扰我的主要因素了，而我的实习经历也才开始了两个月左右，这时我想把自己重心完全放在工作上，想做出一点成绩。我的第三位引路人C同事也出现了，他把他的一些边缘任务分给我，然后慢慢深入，让我对整个项目要做的事情有一个了解。我的任务开始慢慢重了起来，而与此同时，我所犯的错误也开始多了起来。当时我要发布一个新的版本要到生产环境，可是因为换了新的部门，而我的信息还停留在之前的部门，所以发布就出现了延迟。老板催问进度，这时我应该及时告诉老板的，但是内向的性格有开始兴风作浪，想着这儿是管上百人的领导啊，他这么忙，我去打扰他好像不太合适。况且这个任务虽然是我在做，但毕竟我遇到问题，C同事会帮我，所以就沉默了。现在回想，这是做的特别不好的事情，既然我想锻炼自己，就应该把自己等同于一个正式的员工，即便我做的工作可能并不算核心，我也应该及时让老板知道。而且这也是老板一开始就希望我们做到的东西，他更愿意我们去了解真实的项目，即使我们在这个项目里做的东西是边缘的。换句话说，他希望我们知道自己做的一个任务即使再小，也能知道它在整个项目中发挥的作用，这种大局观的意识是我的又一个收获，我希望我能在后面的工作中能坚持去做这件事。
不管是我的老板还是leader，他们都是希望我能有一个大局观的视野，对业务有一个清晰的了解。可是我是更希望能够去了解一些技术的细节，所以这之间应该是存在者一点分歧。不过在我以后会做的项目中，我应该会愿意去花一些时间去培养对整个项目的大局观。
转眼就来到了12月，后续虽然也实习了一个多月，但是因为赶上国外的同事过圣诞，国内的同事也要休剩下的年假，所以基本没有过多的任务量，比较平淡地度过了最后这段时期。复盘我的整段实习经历，我对自己的表现其实不算是特别满意，主要是因为我感觉自己和领导，同事之间缺乏交流，对项目的了解也不算特别清晰，最主要的是我一直考虑的是这段实习能带给我什么，却没有考虑到我的到来可能会为部门带去什么，哪怕是为部门带去一种比较年轻的思想也行。但是在当时的情境之下我似乎又没有更好的办法，当实习，秋招和辅修毕设连在一起，我只能说自己应该是尽力了。总而言之，这是我第一段工作的经历，它带给我很多的回忆，包括友善的同事，幽默又睿智的领导，公司开放的氛围等等，所以应当是我一段很美好的经历！</description>
    </item>
    
    <item>
      <title>Knapsack Problem | 背包问题</title>
      <link>https://root-zr.github.io/en/2022/02/24/knapsack-problem-%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/</link>
      <pubDate>Thu, 24 Feb 2022 13:39:37 +0800</pubDate>
      
      <guid>https://root-zr.github.io/en/2022/02/24/knapsack-problem-%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/</guid>
      <description>01背包问题 有N 件物品和一个容量为bag 的背包。第i 件物品的重量是w[i]，价值是v[i]。 求解将哪些物品装入背包可使价值总和最大。
暴力算法 我们首先想到的应该是穷举所有的可能，然后把最好的那一个给返回。而在穷举的过程种我们需要考虑的问题仅仅是对于第i个物品，到底要不要把它放入背包。所以可以用递归的方式很自然地解决。
/** * * @param w 物品的重量 * @param v 物品的价值 * @param i 第i个物品 * @param alreadyW 已经放入背包的重量 * @param bag 背包所能承受的最大重量 * @return 最大价值 */ public static int recur(int[] w,int[] v,int i,int alreadyW,int bag){ if(alreadyW &amp;gt; bag || i &amp;gt;= w.length) return 0; //背包超重或者没有物品可以装  int totalVal1 = 0,totalVal2 = 0; totalVal1 = recur(w,v,i+1,alreadyW,bag); //第i个物品不放入背包  if(alreadyW+ w[i] &amp;lt;= bag) totalVal2 = recur(w,v,i+1,alreadyW+ w[i],bag) + v[i]; //第i个物品放入背包  return Math.</description>
    </item>
    
    <item>
      <title>Why Do I Start to Write Blog| 为什么要开始写博客</title>
      <link>https://root-zr.github.io/en/2022/02/13/why-do-i-start-to-write-blog-%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BC%80%E5%A7%8B%E5%86%99%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Sun, 13 Feb 2022 13:39:37 +0800</pubDate>
      
      <guid>https://root-zr.github.io/en/2022/02/13/why-do-i-start-to-write-blog-%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BC%80%E5%A7%8B%E5%86%99%E5%8D%9A%E5%AE%A2/</guid>
      <description>我开始写博客应该是2020年的时候。那时正处于新冠疫情期间，由于只能在家里上课，学习的效率难免受到影响，再加上那时的课业压力有点大，所以我便开始尝试来写技术博客来记录自己遇到的一些问题和学习的心得。
最开始的时候都是把文章保存在本地磁盘，因为害怕自己写的东西可能会存在一些错误，从而误导读者，所以不敢发布到网络平台上。后面我开始逐渐说服了自己，因为即便是文章有错误被读者指正了，我也能够改正这个也许一直都不曾发现的问题。从另外一个角度来说，如果自己的一些经验可以帮到千里之外的某一个人的话那更是一件让人非常高兴的事。
于是我开始渐渐将自己写的博客发到自己的知乎上，看着每一篇文章都能被几百个人阅读感觉还是非常不错的。不过慢慢我也发现了知乎存在的一些问题。
首先它是一款带有社交性质的产品，所以我在平台的一言一行可能都想服从于我给自己设定的一些“人设”，有些真正的心里话反而不敢，也不愿意发出来；除此之外我发现虽然目前知乎的用户群体学历是最高的，但从宏观的角度看其实也跟“刚下飞机，年薪百万”差了很远，人们对于技术类的博客可能也并不是特别的关注；最后我发现人们问的问题往往都带着一个预期的答案，比如如果有人的问题是“我大三了绩点比较低还有机会保研吗”，可能他会希望看到类似于&amp;quot;no problem!&amp;ldquo;这种答案，真正去对这个问题分类讨论往往不会受到更多关注。
于是乎，我觉得自己可以搭建一个个人博客，这样的话我就能够完全将自己的所思所想发出来，这样就不用有太多顾率。说干就干，在网上大致了解了一下hugo的用法，然后花了大半天的时间完成了这个个人博客的搭建，虽然大部分的时间都花在了浏览不同的网站主题上面。
最后，非常感激和荣幸您能阅读我的博客！</description>
    </item>
    
  </channel>
</rss>
